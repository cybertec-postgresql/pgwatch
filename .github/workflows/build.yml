name: Go Build & Test
on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore: ['docs/**', 'mkdocs.yml']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test-postgresql-windows:
    if: true # false to skip job during debug
    name: Test on Windows
    runs-on: windows-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Test
      run: |
        cd src/webui
        yarn install && yarn build
        cd ..
        go build
        go test -v -p 1 -parallel 1 -failfast ./...

  test-postgresql-macos:
    if: true # false to skip job during debug
    name: Test on MacOS
    runs-on: macos-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Test
      run: |
        cd src/webui
        yarn install && yarn build
        cd ..
        go build
        go test -v -p 1 -parallel 1 -failfast ./...

  test-postgresql-ubuntu:
    if: true # false to skip job during debug
    name: Test and Build on Ubuntu
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Get dependencies
      run: |
        cd src
        go mod download
        go version

    - name: Test
      run: |
        cd src/webui
        yarn install && yarn build
        cd ..
        go build
        go test -failfast -v -timeout=300s -p 1 -coverprofile=profile.cov ./...

    - name: Coveralls
      uses: shogo82148/actions-goveralls@v1
      with:
        working-directory: src
        path-to-profile: profile.cov 

    - name: GolangCI-Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        working-directory: src

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        version: latest
        args: release --snapshot --skip=publish --clean

  test-docker-images:
    if: true # false to skip job during debug
    name: Test Docker Image on Ubuntu
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Build Docker Image
      shell: bash
      run: |
        docker build \
        --build-arg GIT_TIME=`git show -s --format=%cI HEAD` \
        --build-arg GIT_HASH=`git show -s --format=%H HEAD` \
        --build-arg VERSION=`git rev-parse --abbrev-ref HEAD` \
        -t cybertec/pgwatch3:latest \
        -f docker/Dockerfile .   