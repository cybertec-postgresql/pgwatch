# Build web UI
FROM node:19 AS uibuilder
ADD src/webui /webui
RUN cd webui && yarn install && yarn build

FROM golang:alpine AS builder

# For showing Git version via 'pgwatch3 --version'
ARG GIT_HASH
ARG GIT_TIME
ENV GIT_HASH=${GIT_HASH}
ENV GIT_TIME=${GIT_TIME}

# Set necessary environmet variables needed for our image
ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# Move to working directory /build
WORKDIR /build    

# Update certificates
RUN apk update && apk upgrade && apk add --no-cache ca-certificates
RUN update-ca-certificates

# Copy and download dependency using go mod
COPY src/go.mod .
COPY src/go.sum .
RUN go mod download

# Copy the code into the container
COPY src/. .
COPY --from=uibuilder /webui/build webui/build
RUN sh build_gatherer.sh

FROM alpine

# Copy the binary and certificates into the container
COPY --from=builder /build/pgwatch3 /
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

ADD src/metrics /metrics
ADD src/config  /config

# pgwatch3 internal status endpoint
EXPOSE 8081
# Prometheus metrics scraping port
EXPOSE 9187

# Command to run the executable
ENTRYPOINT ["/pgwatch3"]
