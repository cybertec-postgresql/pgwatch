# Build web UI
FROM node:19 AS uibuilder
ADD src/webui /webui
RUN cd webui && yarn install --network-timeout 100000 && yarn build

# Build gatherer
FROM golang:1.20 as builder
ARG GIT_HASH
ARG GIT_TIME
ENV GIT_HASH=${GIT_HASH}
ENV GIT_TIME=${GIT_TIME}

ADD src /pgwatch3
COPY --from=uibuilder /webui/build /pgwatch3/webui/build
RUN cd /pgwatch3 && bash build_gatherer.sh

# Build the final image
FROM ubuntu:22.04

RUN apt-get -q update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy curl wget apt-transport-https vim git postgresql-common gnupg2 python3-pip \
    && sh /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy postgresql-15 postgresql-plpython3-15 python3-psutil \
    && echo "deb https://packagecloud.io/timescale/timescaledb/ubuntu/ jammy main" | tee /etc/apt/sources.list.d/timescaledb.list \
    && wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | apt-key add - \
    && apt update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy timescaledb-2-postgresql-15 postgresql-15-pg-qualstats \
    && echo "include = 'pgwatch_postgresql.conf'" >> /etc/postgresql/15/main/postgresql.conf

RUN arch=$(arch | sed s/aarch64/arm64/ | sed s/x86_64/amd64/) \
    && wget -q -O grafana.deb "https://dl.grafana.com/oss/release/grafana_9.5.2_${arch}.deb" \
    && dpkg -i grafana.deb && rm grafana.deb


# Add pgwatch3 sources
ADD src /pgwatch3
# Copy over the compiled gatherer
COPY --from=builder /pgwatch3/pgwatch3 /pgwatch3

# For showing Git versions via :8080/versions or 'pgwatch3 --version'
ARG GIT_HASH
ARG GIT_TIME
ENV GIT_HASH=${GIT_HASH}
ENV GIT_TIME=${GIT_TIME}
RUN echo "${GIT_HASH} ${GIT_TIME}" > /pgwatch3/build_git_version.txt


# Grafana config customizations, Python requirements
RUN cp /pgwatch3/bootstrap/grafana_custom_config.ini /etc/grafana/grafana.ini \
    && pip3 install psutil supervisor pyyaml && mkdir /var/log/supervisor    

ADD grafana_dashboards /pgwatch3/grafana_dashboards


# Set up supervisord [https://docs.docker.com/engine/admin/using_supervisord/]
COPY docker/supervisord-timescale.conf /etc/supervisor/supervisord.conf

# NB! When security is a concern one should definitely alter "pgwatch3" password in change_pw.sql and maybe modify pg_hba.conf accordingly
COPY docker/postgresql_timescale.conf /etc/postgresql/15/main/pgwatch_postgresql.conf
COPY docker/pg_hba.conf /etc/postgresql/15/main/pg_hba.conf
COPY docker/docker-launcher-timescale.sh docker/pg_hba.conf /pgwatch3/

ENV PW3_DATASTORE postgres
ENV PW3_PG_METRIC_STORE_CONN_STR postgresql://pgwatch3:pgwatch3admin@localhost:5432/pgwatch3_metrics
ENV PW3_PG_SCHEMA_TYPE timescale
ENV PW3_AES_GCM_KEYPHRASE_FILE /pgwatch3/persistent-config/default-password-encryption-key.txt

# Admin UI for configuring servers to be monitored
EXPOSE 8080
# Gatherer healthcheck port / metric statistics (JSON)
EXPOSE 8081
# Postgres DB holding the pgwatch3 config DB / metrics
EXPOSE 5432
# Grafana UI
EXPOSE 3000
# Prometheus scraping port
EXPOSE 9187

### Volumes for easier updating to newer to newer pgwatch3 containers
### NB! Backwards compatibility is not 100% guaranteed so a backup
### using traditional means is still recommended before updating - see "Updating to a newer Docker version" from README

VOLUME /pgwatch3/persistent-config
VOLUME /var/lib/postgresql
VOLUME /var/lib/grafana

CMD ["/pgwatch3/docker-launcher-timescale.sh"]
