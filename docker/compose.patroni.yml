# before use run:
#   docker build https://github.com/patroni/patroni.git#master -t patroni
# or set PATRONI_TEST_IMAGE env var to your custom image

services:
  etcd1: &etcd
    image: ${PATRONI_TEST_IMAGE:-patroni}
    environment:
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: tutorial
      ETCD_UNSUPPORTED_ARCH: arm64
    container_name: etcd1
    hostname: etcd1
    command: etcd --name etcd1 --initial-advertise-peer-urls http://etcd1:2380
    profiles: ["patroni"]

  etcd2:
    <<: *etcd
    container_name: etcd2
    hostname: etcd2
    command: etcd --name etcd2 --initial-advertise-peer-urls http://etcd2:2380
    profiles: ["patroni"]

  etcd3:
    <<: *etcd
    container_name: etcd3
    hostname: etcd3
    command: etcd --name etcd3 --initial-advertise-peer-urls http://etcd3:2380
    ports: # publish etcd client port only on one node for debugging
      - "2379:2379"
      - "2380:2380"
    profiles: ["patroni"]

  haproxy:
    image: ${PATRONI_TEST_IMAGE:-patroni}
    env_file: bootstrap/patroni.env
    hostname: haproxy
    container_name: haproxy
    ports:
      - "5000:5000"
      - "5001:5001"
    command: haproxy
    environment: &haproxy_env
      ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
      PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
      PATRONI_SCOPE: demo
    profiles: ["patroni"]

  patroni1:
    image: ${PATRONI_TEST_IMAGE:-patroni}
    env_file: bootstrap/patroni.env
    hostname: patroni1
    container_name: patroni1
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni1
    profiles: ["patroni"]

  patroni2:
    image: ${PATRONI_TEST_IMAGE:-patroni}
    env_file: bootstrap/patroni.env
    hostname: patroni2
    container_name: patroni2
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni2
    profiles: ["patroni"]

  patroni3:
    image: ${PATRONI_TEST_IMAGE:-patroni}
    env_file: bootstrap/patroni.env
    hostname: patroni3
    container_name: patroni3
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni3
    profiles: ["patroni"]
