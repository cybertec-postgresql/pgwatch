services:
  postgres:
    user: postgres
    # Custom Dockerfile.postgres within build section is used to enable plpython3u extension.
    # Comment out the build section to use the default PostgreSQL image.
    build: 
      context: .
      dockerfile: Dockerfile.postgres-plpython3u
    # If you want pure PostgreSQL vanilla experience use:
    # image: &pgimage "postgres:latest"
    image: &pgimage postgres-plpython3u:latest
    container_name: postgres
    command:
      - "-cshared_preload_libraries=pg_stat_statements,pg_qualstats"
      - "-cpg_stat_statements.track=all"
      - "-cpg_stat_statements.track_planning=on"
      - "-ctrack_io_timing=on"
      - "-ctrack_functions=pl"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - "./bootstrap/init_replication.sh:/docker-entrypoint-initdb.d/init_replication.sh"
      - "./bootstrap/create_role_db.sql:/docker-entrypoint-initdb.d/create_role_db.sql"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-standby:
    user: postgres
    image: *pgimage
    container_name: postgres-standby
    environment:
      POSTGRES_PASSWORD: standbypass
      POSTGRES_USER: postgres
    ports:
      - "5433:5432"
    depends_on:
      postgres:
        condition: service_healthy
    command: |
      bash -c "
        echo 'Setting up standby server...'
        export PGDATA=/var/lib/postgresql/standby
        
        # Check if data directory already exists and is initialized
        if [ -f /var/lib/postgresql/standby/PG_VERSION ]; then
          echo 'Data directory already exists and is initialized, starting PostgreSQL...'
        else
          echo 'Initializing new standby server...'
          
          # Create replication slot if it doesn't exist
          psql -h postgres -U postgres -c \"SELECT * FROM pg_create_physical_replication_slot('standby_slot');\" 2>/dev/null || true
          
          # Create custom data directory with correct permissions
          mkdir -p /var/lib/postgresql/standby
          chmod 0700 /var/lib/postgresql/standby
          
          # Remove any existing files to ensure clean backup
          rm -rf /var/lib/postgresql/standby/* || true
          
          # Create base backup directly to our custom directory
          pg_basebackup -h postgres -U postgres -D /var/lib/postgresql/standby -Xs -P -R -S standby_slot
          
          # Ensure correct permissions after backup
          chmod 0700 /var/lib/postgresql/standby
        fi
        
        # Start PostgreSQL with custom data directory
        exec postgres -D /var/lib/postgresql/standby -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c track_io_timing=on -c track_functions=pl
      "
    links:
      - postgres