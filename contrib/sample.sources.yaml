- name: test1       # An arbitrary unique name for the monitored source
  conn_str: postgresql://postgres@localhost/postgres
  kind: postgres              # One of the:
                              # - postgres
                              # - postgres-continuous-discovery
                              # - pgbouncer
                              # - pgpool
                              # - patroni
                              # Defaults to postgres if not specified
  preset_metrics: exhaustive  # from list of presets defined in "metrics/preset-configs.yaml"
  custom_metrics:             # if both preset and custom are specified, custom wins
  preset_metrics_standby:     # optional metrics configuration for standby / replica state, v1.8.1+
  custom_metrics_standby:
  include_pattern:            # regex to filter databases to actually monitor for the "continuous" modes
  exclude_pattern:
  is_enabled: true
  group: default              # just for logical grouping of DB hosts or for "sharding", i.e. splitting the workload between many gatherer daemons
  custom_tags:                # option to add arbitrary tags for every stored data row,
      aws_instance_id: i-0af01c0123456789a       # for example to fetch data from some other source onto a same Grafana graph

- name: patroni-test
  kind: patroni
  conn_str: etcd://localhost:2379,10.0.1:2379,10.0.2:2379/service/batman
  stmt_timeout: 5
  preset_metrics:
  custom_metrics:
    wal: 60
  dbname_include_pattern: (bar|postgres)
  dbname_exclude_pattern:
  is_enabled: false
  only_if_master: true # don't gather metrics from standby servers

- name: pgbouncer
  conn_str: postgresql://pgwatch:pgwatchadmin@localhost/pgbouncer
  kind: pgbouncer
  custom_metrics: 
    pgbouncer_stats: 10
    pgbouncer_clients: 10
  is_enabled: true

- name: envvar
  kind: $kind
  is_enabled: true
  include_pattern: $include_pattern
  exclude_pattern: $exclude_pattern
  preset_metrics: $preset_metrics
  preset_metrics_standby: $preset_metrics_standby