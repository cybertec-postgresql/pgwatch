// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: pgwatch.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncOp int32

const (
	SyncOp_AddOp     SyncOp = 0
	SyncOp_DeleteOp  SyncOp = 1
	SyncOp_InvalidOp SyncOp = 2
)

// Enum value maps for SyncOp.
var (
	SyncOp_name = map[int32]string{
		0: "AddOp",
		1: "DeleteOp",
		2: "InvalidOp",
	}
	SyncOp_value = map[string]int32{
		"AddOp":     0,
		"DeleteOp":  1,
		"InvalidOp": 2,
	}
)

func (x SyncOp) Enum() *SyncOp {
	p := new(SyncOp)
	*p = x
	return p
}

func (x SyncOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncOp) Descriptor() protoreflect.EnumDescriptor {
	return file_pgwatch_proto_enumTypes[0].Descriptor()
}

func (SyncOp) Type() protoreflect.EnumType {
	return &file_pgwatch_proto_enumTypes[0]
}

func (x SyncOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncOp.Descriptor instead.
func (SyncOp) EnumDescriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{0}
}

type Reply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logmsg        string                 `protobuf:"bytes,1,opt,name=logmsg,proto3" json:"logmsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_pgwatch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{0}
}

func (x *Reply) GetLogmsg() string {
	if x != nil {
		return x.Logmsg
	}
	return ""
}

type MeasurementEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DBName        string                 `protobuf:"bytes,1,opt,name=DBName,proto3" json:"DBName,omitempty"`
	MetricName    string                 `protobuf:"bytes,3,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	CustomTags    map[string]string      `protobuf:"bytes,4,rep,name=CustomTags,proto3" json:"CustomTags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Data          []*structpb.Struct     `protobuf:"bytes,5,rep,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasurementEnvelope) Reset() {
	*x = MeasurementEnvelope{}
	mi := &file_pgwatch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasurementEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementEnvelope) ProtoMessage() {}

func (x *MeasurementEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementEnvelope.ProtoReflect.Descriptor instead.
func (*MeasurementEnvelope) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{1}
}

func (x *MeasurementEnvelope) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *MeasurementEnvelope) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MeasurementEnvelope) GetCustomTags() map[string]string {
	if x != nil {
		return x.CustomTags
	}
	return nil
}

func (x *MeasurementEnvelope) GetData() []*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type SyncReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DBName        string                 `protobuf:"bytes,1,opt,name=DBName,proto3" json:"DBName,omitempty"`
	MetricName    string                 `protobuf:"bytes,2,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	Operation     SyncOp                 `protobuf:"varint,3,opt,name=Operation,proto3,enum=SyncOp" json:"Operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	mi := &file_pgwatch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_pgwatch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_pgwatch_proto_rawDescGZIP(), []int{2}
}

func (x *SyncReq) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *SyncReq) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *SyncReq) GetOperation() SyncOp {
	if x != nil {
		return x.Operation
	}
	return SyncOp_AddOp
}

var File_pgwatch_proto protoreflect.FileDescriptor

var file_pgwatch_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x70, 0x67, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x6d, 0x73, 0x67, 0x22, 0xff,
	0x01, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x42, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44,
	0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x68, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x42, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x52,
	0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x30, 0x0a, 0x06, 0x53, 0x79,
	0x6e, 0x63, 0x4f, 0x70, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4f, 0x70, 0x10, 0x02, 0x32, 0x5e, 0x0a, 0x08,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x08, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pgwatch_proto_rawDescOnce sync.Once
	file_pgwatch_proto_rawDescData []byte
)

func file_pgwatch_proto_rawDescGZIP() []byte {
	file_pgwatch_proto_rawDescOnce.Do(func() {
		file_pgwatch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pgwatch_proto_rawDesc), len(file_pgwatch_proto_rawDesc)))
	})
	return file_pgwatch_proto_rawDescData
}

var file_pgwatch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pgwatch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pgwatch_proto_goTypes = []any{
	(SyncOp)(0),                 // 0: SyncOp
	(*Reply)(nil),               // 1: Reply
	(*MeasurementEnvelope)(nil), // 2: MeasurementEnvelope
	(*SyncReq)(nil),             // 3: SyncReq
	nil,                         // 4: MeasurementEnvelope.CustomTagsEntry
	(*structpb.Struct)(nil),     // 5: google.protobuf.Struct
}
var file_pgwatch_proto_depIdxs = []int32{
	4, // 0: MeasurementEnvelope.CustomTags:type_name -> MeasurementEnvelope.CustomTagsEntry
	5, // 1: MeasurementEnvelope.Data:type_name -> google.protobuf.Struct
	0, // 2: SyncReq.Operation:type_name -> SyncOp
	2, // 3: Receiver.UpdateMeasurements:input_type -> MeasurementEnvelope
	3, // 4: Receiver.SyncMetric:input_type -> SyncReq
	1, // 5: Receiver.UpdateMeasurements:output_type -> Reply
	1, // 6: Receiver.SyncMetric:output_type -> Reply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pgwatch_proto_init() }
func file_pgwatch_proto_init() {
	if File_pgwatch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pgwatch_proto_rawDesc), len(file_pgwatch_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pgwatch_proto_goTypes,
		DependencyIndexes: file_pgwatch_proto_depIdxs,
		EnumInfos:         file_pgwatch_proto_enumTypes,
		MessageInfos:      file_pgwatch_proto_msgTypes,
	}.Build()
	File_pgwatch_proto = out.File
	file_pgwatch_proto_goTypes = nil
	file_pgwatch_proto_depIdxs = nil
}
